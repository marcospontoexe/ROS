base_local_planner: "dwa_local_planner/DWAPlannerROS" # Sets the dwa local planner
#base_local_planner: "base_local_planner/TrajectoryPlannerROS" # Sets the Trajectory Rollout algorithm from base local planner
#base_local_planner: "eband_local_planner/EBandPlannerROS" # Sets the eband local planner
#base_local_planner: "teb_local_planner/TebLocalPlannerROS" # Sets the teb local planner

DWAPlannerROS:
  #--------Robot configuration parameters---------------

  # Aceleração máxima linear em metros por segundo ao quadrado
  acc_lim_x: 2.5

  # Aceleração máxima de rotação em radianos por segundo ao quadrado
  acc_lim_theta: 3.2

  acc_lim_y: 0

  # Velocidade máxima linear em metros por segundo
  max_vel_x: 0.5
  
  # Velocidade mínima linear em metros por segundo (pode ser negativa para marcha à ré)
  min_vel_x: 0.0

  max_vel_y: 0

  min_vel_y: 0

  max_vel_trans: 0.5

  min_vel_trans: 0.1
  
  # Velocidade máxima de rotação em radianos por segundo
  max_vel_theta: 1.0
  
  # Velocidade mínima de rotação em radianos por segundo
  min_vel_theta: 0.2
  #------------------------ 
  

  #-----Goal Tolerance Parameters---------
  # Tolerância de orientação para considerar o objetivo atingido em radianos
  yaw_goal_tolerance: 0.1

  # Tolerância de distância para considerar o objetivo atingido em metros
  xy_goal_tolerance: 0.2

  latch_xy_goal_tolerance: false
  #----------------------------------------------

  # Largura do robô em metros (incluindo margem de segurança)
  robot_radius: 0.3

  # Distância máxima do caminho previsto que pode ser calculada
  path_distance_bias: 32.0

  # Peso do obstáculo no cálculo do custo do caminho
  goal_distance_bias: 20.0

  occdist_scale: 0.02

  # Frequência de atualização do planejador local em Hz
  planner_frequency: 5.0

  # Frequência de atualização do controlador em Hz
  controller_frequency: 10.0

  # Janela de tempo para a previsão do movimento em segundos
  sim_time: 1.5

  # Resolução do grid usado para a previsão do movimento
  vx_samples: 20
  vy_samples: 0
  vtheta_samples: 20
  vth_samples: 40

  
  # Parâmetros de segurança e prevenção de colisões
  scaling_speed: 0.25
  max_scaling_factor: 0.2

  # Se deve usar o obstáculo inflado para a verificação de colisão
  use_dwa: true

  # Tolerância de custo para parar o robô ao se aproximar de um obstáculo
  obstacle_cost: 0.6

  # Peso do caminho em termos de custo
  path_cost_weight: 32.0

  # Peso da distância ao objetivo em termos de custo
  goal_cost_weight: 24.0

  # Parâmetro de velocidade de rotação mínima
  min_vel_theta: 0.4

  # Parâmetro de velocidade de rotação máxima
  max_vel_theta: 1.0

  # Tempo de paragem
  stop_time_buffer: 0.2

  # Aceleração de travagem
  acc_lim_trans: 1.0

  # Intervalo de tempo para a previsão do movimento em segundos
  forward_point_distance: 0.325

  # Frequência de reconfiguração dinâmica
  oscillation_reset_dist: 0.05

  # Debugging
  publish_traj_pc : true
  publish_cost_grid_pc: true

  # Parâmetros de Recuperação por Rotação
  sim_granularity: 0.02   #A distância, em radianos, entre verificações de obstáculos ao verificar se uma rotação no lugar é segura. (Padrão é 1 grau).
  angular_sim_granularity: 0.02

# usado apenas se o parÂmetro "base_local_planner" for igual a "base_local_planner/TrajectoryPlannerROS"
TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5
  acc_lim_theta:  3.2

  max_vel_x: 1.0
  min_vel_x: 0.0

  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.2

  holonomic_robot: false
  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 2.0

  # Parâmetros de Recuperação por Rotação
  sim_granularity: 0.02   #A distância, em radianos, entre verificações de obstáculos ao verificar se uma rotação no lugar é segura. (Padrão é 1 grau).
  angular_sim_granularity: 0.02


  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true  

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1





